<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope, $scope) {
  /* widget controller */
  var c = this;
	
	$rootScope.$on('selectNote', function(event, data){
		c.server.get({
			action: 'getNote',
			noteId: $rootScope.noteId
		}).then(function(response){
			/*
			c.data is the dynamic value in the widget view
			*/
			c.data.title = response.data.note.title;
			c.data.note = response.data.note.note;
			c.data.noteId = response.data.note.sys_id;
			//console.log("Note title: " + c.data.title);
		});
	});
	
	c.updateNote = function(updateType){
		//console.log("Title: '" + c.data.title + "' Note: '" + c.data.note);
		c.server.get({
			action: 'updateNote',
			noteId: c.data.noteId,
			noteBody: c.data.note,
			noteTitle: c.data.title
		}).then(function(response){
			$rootScope.newNote = response.data.newNote;
			$rootScope.$emit("notifyNotesList",newNote);
			console.log("notifyNotesList event emitted for noteId: " + response.data.newNote.noteId);
		});
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link/>
        <name>Notes Body</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
	if(input && input.noteId){
		var notesGR = new GlideRecord("x_snc_createnotes_note");
		if(notesGR.get(input.noteId)){
			if(input.action == "getNote"){
				data.note = {};
				$sp.getRecordDisplayValues(data.note, notesGR, "title, note, sys_id");
			}
			else if(input.action == "updateNote"){
				notesGR.title = input.noteTitle;
				notesGR.note = input.noteBody;
				notesGR.update();
				data.newNote = {
					newTitle: input.noteTitle,
					newBody: input.noteBody,
					noteId: input.noteId
				}
			}
		}
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-07-03 14:39:03</sys_created_on>
        <sys_id>56a95d271b1273004764a9b4bd4bcb5c</sys_id>
        <sys_mod_count>35</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_56a95d271b1273004764a9b4bd4bcb5c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-07-05 09:45:15</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default" ng-show="c.data.noteId">
  <div class="panel-heading clearfix">
    <div class="row">
      <div class="col-md-12">
        <input class="form-control" id="note-title" 
               ng-model="c.data.title" 
               ng-change="c.updateNote('title')" 
               ng-model-options="{debounce: 1000}"/>
      </div>
    </div>
  </div>
  <div class="panel-body">
    <textarea class="form-control" id="note-body" 
              ng-model="c.data.note" 
              ng-change="c.updateNote('body')" 
              ng-model-options="{debounce: 1000}">
    </textarea>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
